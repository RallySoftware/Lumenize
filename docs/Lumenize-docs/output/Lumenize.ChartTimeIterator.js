Ext.data.JsonP.Lumenize_ChartTimeIterator({"tagname":"class","name":"Lumenize.ChartTimeIterator","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Lumenize.ChartTimeIterator","members":{"cfg":[],"property":[],"method":[{"name":"constructor","tagname":"method","owner":"Lumenize.ChartTimeIterator","meta":{},"id":"method-constructor"},{"name":"getAll","tagname":"method","owner":"Lumenize.ChartTimeIterator","meta":{},"id":"method-getAll"},{"name":"hasNext","tagname":"method","owner":"Lumenize.ChartTimeIterator","meta":{},"id":"method-hasNext"},{"name":"next","tagname":"method","owner":"Lumenize.ChartTimeIterator","meta":{},"id":"method-next"},{"name":"startOver","tagname":"method","owner":"Lumenize.ChartTimeIterator","meta":{},"id":"method-startOver"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":9,"files":[{"filename":"ChartTimeIteratorAndRange.coffee.js","href":"ChartTimeIteratorAndRange.coffee.html#Lumenize-ChartTimeIterator"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ChartTimeIteratorAndRange.coffee.html#Lumenize-ChartTimeIterator' target='_blank'>ChartTimeIteratorAndRange.coffee.js</a></div></pre><div class='doc-contents'><h1>ChartTimeIterator</h1>\n\n<p>Iterate through days, months, years, etc. skipping weekends and holidays that you\nspecify. It will also iterate over hours, minutes, seconds, etc. and skip times that are not\nbetween the specified work hours.</p>\n\n<h2>Usage</h2>\n\n<pre><code>{ChartTimeIterator, ChartTimeRange, ChartTime} = require('../')\n\ncti = new ChartTimeIterator({\n  start:new ChartTime({granularity: 'day', year: 2009, month:1, day: 1}),\n  pastEnd:new ChartTime({granularity: 'day', year: 2009, month:1, day: 8}),\n  workDays: 'Monday, Tuesday, Wednesday, Thursday, Friday',\n  holidays: [\n    {month: 1, day: 1},  # New Years day was a Thursday in 2009\n    {year: 2009, month: 1, day: 2}  # Also got Friday off in 2009\n  ]\n})\n\nwhile (cti.hasNext())\n  console.log(cti.next().toString())\n\n# 2009-01-05\n# 2009-01-06\n# 2009-01-07\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Lumenize.ChartTimeIterator'>Lumenize.ChartTimeIterator</span><br/><a href='source/ChartTimeIteratorAndRange.coffee.html#Lumenize-ChartTimeIterator-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Lumenize.ChartTimeIterator-method-constructor' class='name expandable'>Lumenize.ChartTimeIterator</a>( <span class='pre'>ctr, [emit], [childGranularity], [tz]</span> ) : <a href=\"#!/api/Lumenize.ChartTimeIterator\" rel=\"Lumenize.ChartTimeIterator\" class=\"docClass\">Lumenize.ChartTimeIterator</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ctr</span> : ChartTimeRange<div class='sub-desc'><p>A ChartTimeRange or a raw Object with all the necessary properties to be a spec for a new ChartTimeRange.\n   Using a ChartTimeRange is now the preferred method. The raw Object is supported for backward compatibility.</p>\n</div></li><li><span class='pre'>emit</span> : String (optional)<div class='sub-desc'><p>An optional String that specifies what should be emitted. Possible values are 'ChartTime' (default),\n   'ChartTimeRange', and 'Date' (javascript Date Object). Note, to maintain backward compatibility with the time\n   before ChartTimeRange existed, the default for emit when instantiating a new ChartTimeIterator directly is\n   'ChartTime'. However, if you request a new ChartTimeIterator from a ChartTimeRange object using getIterator(),\n   the default is 'ChartTimeRange'.</p>\n</div></li><li><span class='pre'>childGranularity</span> : String (optional)<div class='sub-desc'><p>When emit is 'ChartTimeRange', this is the granularity for the start and pastEnd of the\n   ChartTimeRange that is emitted.</p>\n</div></li><li><span class='pre'>tz</span> : String (optional)<div class='sub-desc'><p>A Sting specifying the timezone in the standard form,<code>America/New_York</code> for example.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Lumenize.ChartTimeIterator\" rel=\"Lumenize.ChartTimeIterator\" class=\"docClass\">Lumenize.ChartTimeIterator</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Lumenize.ChartTimeIterator'>Lumenize.ChartTimeIterator</span><br/><a href='source/ChartTimeIteratorAndRange.coffee.html#Lumenize-ChartTimeIterator-method-getAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Lumenize.ChartTimeIterator-method-getAll' class='name expandable'>getAll</a>( <span class='pre'></span> ) : ChartTime[]/Date[]/ChartTimeRange[]</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>ChartTime[]/Date[]/ChartTimeRange[]</span><div class='sub-desc'><p>Returns all values as an array.</p>\n</div></li></ul></div></div></div><div id='method-hasNext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Lumenize.ChartTimeIterator'>Lumenize.ChartTimeIterator</span><br/><a href='source/ChartTimeIteratorAndRange.coffee.html#Lumenize-ChartTimeIterator-method-hasNext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Lumenize.ChartTimeIterator-method-hasNext' class='name expandable'>hasNext</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if there are still things left to iterator over. Note that if there are holidays,\n   weekends or non-workhours to skip, then hasNext() will take that into account. For example if the pastEnd is a\n   Sunday, hasNext() will return true the next time it is called after the Friday is emitted.</p>\n</div></li></ul></div></div></div><div id='method-next' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Lumenize.ChartTimeIterator'>Lumenize.ChartTimeIterator</span><br/><a href='source/ChartTimeIteratorAndRange.coffee.html#Lumenize-ChartTimeIterator-method-next' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Lumenize.ChartTimeIterator-method-next' class='name expandable'>next</a>( <span class='pre'></span> ) : ChartTime/Date/ChartTimeRange</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>ChartTime/Date/ChartTimeRange</span><div class='sub-desc'><p>Emits the next value of the iterator. The start will be the first value emitted unless it should\n   be skipped due to holiday, weekend, or workhour knockouts.</p>\n</div></li></ul></div></div></div><div id='method-startOver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Lumenize.ChartTimeIterator'>Lumenize.ChartTimeIterator</span><br/><a href='source/ChartTimeIteratorAndRange.coffee.html#Lumenize-ChartTimeIterator-method-startOver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Lumenize.ChartTimeIterator-method-startOver' class='name expandable'>startOver</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Will go back to the where the iterator started. ...</div><div class='long'><p>Will go back to the where the iterator started.</p>\n</div></div></div></div></div></div></div>"});